<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.niit.bookshop.dao.OrderDao">
  <resultMap id="BaseResultMap" type="com.niit.bookshop.entity.Order">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="orderid" jdbcType="VARCHAR" property="orderid" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, orderid, `date`, `uid`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="oid" keyProperty="oid" parameterType="com.niit.bookshop.entity.Order" useGeneratedKeys="true">
    insert into order (orderid, `date`, `uid`
      )
    values (#{orderid,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="oid" keyProperty="oid" parameterType="com.niit.bookshop.entity.Order" useGeneratedKeys="true">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderid,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.niit.bookshop.entity.Order">
    update order
    <set>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niit.bookshop.entity.Order">
    update order
    set orderid = #{orderid,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      `uid` = #{uid,jdbcType=INTEGER}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <resultMap id="myMapper" type="com.niit.bookshop.entity.Order">
    <id property="oid" column="oid"></id>
    <result property="orderid" column="orderid"></result>
    <result property="date" column="date" javaType="Date"></result>
    <result property="orderNum" column="order_num"></result>
    <collection property="user" ofType="com.niit.bookshop.entity.User" column="uid">
      <id property="id" column="id"></id>
      <result property="name" column="name"></result>
    </collection>
    <collection property="book" ofType="com.niit.bookshop.entity.Book" column="bid">
      <id property="id" column="id"></id>
      <result property="bookName" column="book_name"></result>
      <result property="bookAuthor" column="book_author"></result>
      <result property="bookImg" column="book_img"></result>
      <result property="bookPrice" column="book_price"></result>
    </collection>
  </resultMap>
<!--  <select id="findAll" resultMap="myMapper">-->
<!--    select * from `order` left outer join user on order.uid=user.id-->
<!--  </select>-->
  <sql id="order">select `order`.*,book.book_author,book.book_name,book.book_img,user.`name`,book.book_price from `order`,`book`,`user`</sql>
  <select id="findAll" resultMap="myMapper">
    <include refid="order"></include>
    where order.uid=`user`.id and order.bid=`book`.id
  </select>
  <select id="findByValue" resultMap="myMapper" parameterType="String">
    <include refid="order"></include>
    where order.uid=`user`.id and order.bid=`book`.id and (`order`.orderid like #{str} or book.book_name like #{str} or book.book_author like #{str})
  </select>
</mapper>